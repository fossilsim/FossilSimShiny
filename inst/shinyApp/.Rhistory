install.packages(FossilSim)
install.packages("FossilSim")
shiny::runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp()
install.packages(FossilSim)
install.packages("FossilSim")
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
library(devtools)
install.packages("devtools")
library(devtools)
shiny::runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp()
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
shiny::runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
shiny::runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
devtools::check()
ls
q()
clear
q()
devtools::load_all()
q()
shiny::runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
shiny::runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
MyVar <- matrix(c(
0.2,0.1,0.0,
0.1,0.2,0.0,
0.0,0.0,0.2),byrow=TRUE,nrow=3)
MyMean <- c(1,1,2)
plot(rlnorm.rplus(100,log(MyMean),MyVar))
plot(rnorm.aplus(100,MyMean,MyVar))
x <- rnorm.aplus(5,MyMean,MyVar)
dnorm.aplus(x,MyMean,MyVar)
dlnorm.rplus(x,log(MyMean),MyVar)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
MyVar <- matrix(c(
0.2,0.1,0.0,
0.1,0.2,0.0,
0.0,0.0,0.2),byrow=TRUE,nrow=3)
MyMean <- c(1,1,2)
plot(rlnorm.rplus(100,log(MyMean),MyVar))
plot(rnorm.aplus(100,MyMean,MyVar))
x <- rnorm.aplus(5,MyMean,MyVar)
dnorm.aplus(x,MyMean,MyVar)
dlnorm.rplus(x,log(MyMean),MyVar)
MyMean <- c(1,1,2)
plot(rlnorm.rplus(100,log(MyMean),MyVar))
plot(rnorm.aplus(100,MyMean,MyVar))
library(TreeSim)
MyVar <- matrix(c(
0.2,0.1,0.0,
0.1,0.2,0.0,
0.0,0.0,0.2),byrow=TRUE,nrow=3)
MyMean <- c(1,1,2)
plot(rlnorm.rplus(100,log(MyMean),MyVar))
plot(rlnorm(100,log(MyMean),MyVar))
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
#simulate tree
t = ape::rtree(6)
# assign a max age based on tree height
max.age = tree.max(t)
# generate water depth profile
strata = 7
wd = sim.gradient(strata)
# simulate fossils using tree & max.age and strata
f = sim.fossils.environment(t, max.age = max.age, strata = strata,
proxy.data = wd, PD = 0.5, DT = 1, PA = 1)
plot(f, t, show.proxy = TRUE, proxy.data = wd, strata = strata, show.strata = TRUE)
# assign a max age based on tree height
max.age = tree.max(t)
#simulate tree
t = ape::rtree(6)
# assign a max age based on tree height
max.age = tree.max(t)
library(FossilSim)
#simulate tree
t = ape::rtree(6)
# assign a max age based on tree height
max.age = tree.max(t)
# generate water depth profile
strata = 7
wd = sim.gradient(strata)
# simulate fossils using tree & max.age and strata
f = sim.fossils.environment(t, max.age = max.age, strata = strata,
proxy.data = wd, PD = 0.5, DT = 1, PA = 1)
plot(f, t, show.proxy = TRUE, proxy.data = wd, strata = strata, show.strata = TRUE)
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
# Start of our UI ---
# tagList is the nested version of fluidPage
tagList(
# Loading ---
fixedPanel(id = "loader-wrapper",
tags$div(id = "loader", "")
),
sidebarPanel(
HTML("</br>"),
# I. Tree Simulation Inputs ---
actionButton(NS(id, "treetab-button"), h3("Tree"), class = "protobutton"),
tags$div(id = NS(id, "treetab-content"), class = "prototab prototabhidden",
HTML("</br>"),
# reactive inputs
numericInput(inputId = NS(id, "lambda"), # input name
label = "Speciation rate",  # user instructions
value = 0.1,
min = 0,                    # input specific arguments
max = 10 ),
numericInput(inputId = NS(id, "mu"),
label = "Extinction rate",
value = 0.05,
min = 0,
max = 10 ),
numericInput(inputId = NS(id, "tips"),
label = "Tip number",
value = 10,
min = 0,
max = 100 ),
actionButton(NS(id, "simtree"), "Simulate tree"),
# "user tree" option ---
checkboxInput(inputId = NS(id, "usertree"), "User tree", value = FALSE),
textInput(inputId = NS(id, "newick"), "User tree",
value = "Enter newick string..."),
),
# ---<
HTML("</br>"),
# II. Taxonomy Simulation Inputs ---
actionButton(NS(id, "taxtab-button"), h3("Taxonomy"), class = "protobutton"),
tags$div(id = NS(id, "taxtab-content"), class = "prototab prototabhidden",
HTML("</br>"),
numericInput(inputId = NS(id, "taxonomybeta"),
label = "Probability of symmetric speciation",
value = 0.1,
min = 0,
max = 10 ),
numericInput(inputId = NS(id, "taxonomylambda"),
label = "Rate of anagenesis",
value = 0.1,
min = 0,
max = 10 ),
actionButton(NS(id, "simtax"), "Simulate taxonomy"),
),
# ---<
HTML("</br>"),
# III. Fossil Sim Inputs ---
actionButton(NS(id, "fossiltab-button"), h3("Fossils"), class = "protobutton"),
tags$div(id = NS(id, "fossiltab-content"), class = "prototab prototabhidden",
HTML("</br>"),
# Multiple panel : every type of fossil simulation has it's panel
#todo -- add more type of fossil simulations
#warning -- subject to change
tabsetPanel(id = NS(id, "tabset"),
# i. Uniform Distribution --
tabPanel(p("Uniform", id = "uniform"),
numericInput(inputId = NS(id, "psi"),
label = "Sampling rate",
value = 1,
min = 0,
max = 10 )
),
# --<
# ii. Non-uniform Distribution --
tabPanel(p("Non-uniform", id = "non-uniform"),
sliderInput(inputId = NS(id, "int"),
label = "Number of intervals",
value = 1,
min = 0,
max = 10 ),
numericInput(inputId = NS(id, "meanrate"),
label = "Mean sampling rate",
value = 1,
min = 0,
max = 10 ),
numericInput(inputId = NS(id, "variance"),
label = "Variance",
value = 1,
min = 0,
max = 10 )
),
# --<
# iii. Environment Model (Holland, 1995) --
tabPanel(p("Environment-dependent", id = "enviro-dep"),
numericInput(inputId = NS(id, "strata"),
label = "Strata",
value = 7,
min = 1,
max = 10 ),
numericInput(inputId = NS(id, "pd"),
label = "PD",
value = 0.5,
min = 0,
max = 10 ),
numericInput(inputId = NS(id, "dt"),
label = "DT",
value = 1,
min = 0,
max = 10 ),
numericInput(inputId = NS(id, "pa"),
label = "PA",
value = 1,
min = 0,
max = 10 ),
checkboxInput(inputId = NS(id, "showsamplingproxy"), "Show Sampling Proxy", value = TRUE)
),
# --<
# iv. Lineage Dependent Model
tabPanel(p("Lineage-dependent", id = "lineage-dep"),
numericInput(inputId = NS(id, "rate"),
label = "Rate",
value = 2,
min = 1,
max = 5 ),
),
# --<
),
actionButton(NS(id, "newfossils"), "Simulate fossils"),
),
# ---<
HTML("</br> </br> </br> </br> </br> </br>"),
# IV. Appearance Toggles ---
actionButton(NS(id, "appearancetab-button"), h3("Appearance"), class = "protobutton"),
tags$div(id = NS(id, "appearancetab-content"), class = "prototab prototabhidden",
HTML("</br>"),
checkboxInput(inputId = NS(id, "showtree"), "Show tree", value = TRUE),
checkboxInput(inputId = NS(id, "showtaxonomy"), "Show taxonomy", value = FALSE),
checkboxInput(inputId = NS(id, "showfossils"), "Show all occurrences", value = TRUE),
checkboxInput(inputId = NS(id, "showranges"), "Show ranges", value = FALSE),
checkboxInput(inputId = NS(id, "showstrata"), "Show strata", value = FALSE),
checkboxInput(inputId = NS(id, "showtips"), "Show tips", value = FALSE),
checkboxInput(inputId = NS(id, "reconstructed"), "Show reconstructed tree", value = FALSE),
),
# ---<
# V. Save Tree ---
h3("Save your Tree"),
actionButton(NS(id, "saveas"), "Save tree as image..."),
# Import Javascript for saveas functionality
tags$script(src = "saveas.js"),
tags$script(src = "protodashboard.js"),
# ---<
# Import Js for loading animation
tags$script(src = "loading.js")
)
)
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
validate(need(!is.null(v$current$tax), "You need some taxonomy"))
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp()
runApp()
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
runApp('Documents/R/stage2022/shiny_unstable/inst/shinyApp')
